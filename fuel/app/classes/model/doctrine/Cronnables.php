<?php

/**
 * Cronnables
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property Groups $Groups
 * @property Doctrine_Collection $CronnableLogs
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Cronnables extends BaseCronnables {
  public $log_limit = 100;

  public function assignDefaultValues($overwrite = false) {
    parent::assignDefaultValues($overwrite);
    
    $this->added = date("Y-m-d H:i:s");
    $this->attempts = 0;
  }
  
  public function setUp() {
    parent::setUp();
    $this->hasOne('Groups', array(
        'local' => 'group_id',
        'foreign' => 'id'));
    $this->hasMany('CronnableLogs', array(
        'local' => 'id',
        'foreign' => 'cronnable_id'));
  }

  static $duration = 0;

  public function execute(){
    // curl source: http://www.jonasjohn.de/snippets/php/curl-example.htm
    // is cURL installed yet?
    if (!function_exists('curl_init')){
        die('Sorry cURL is not installed!');
    }

    Helper_Date::timer_start();

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $this->url);
    curl_setopt($ch, CURLOPT_REFERER, \Fuel\Core\Uri::base());
    curl_setopt($ch, CURLOPT_USERAGENT, "DC.CRONNER");
    curl_setopt($ch, CURLOPT_HEADER, 0);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 60);
    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 5);
    $output = curl_exec($ch);
    curl_close($ch);

    $this->attempts++;
    $this->last_attempt = date("Y-m-d H:i:s");

    $log = new CronnableLogs;
    $log->Cronnables = $this;
    $log->result = $output;
    $log->duration = Helper_Date::timer_end();
    $log->save();

    Cronnables::$duration = $log->duration;

    CronnableLogs::flush_old($this->id, $this->log_limit);

    return $output;
  }
}